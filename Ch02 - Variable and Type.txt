2-1 Declaration of variable

Ex)	int age;
	double value;
	int result = 30;

* if wanna change 2 variable each other, make new variable which is called temp.



2-2 Integer type

byte	1byte	8bit
short	2byte	16bit
char	2byte	16bit
int	4byte	32bit
long	8byte	64bit

* byte, short, int, long is all (signed) integer type 이며, 최상위 비트는 부호 비트로 사용한다.
* 최상위 부호비트가 음수인 경우 0 과 1을 모두 바꿔주고 1을 더해주면 10진수가 된다. (진수 변환 공부 필요)
* 값의 범위 = 양수: 0 ~ (2^(n-1)-1) / 음수: -2^(n-1) ~ -1

* 코드에서 프로그래머가 직접 입력한 값 = literal
	- 2진수: 0b, 0B가 앞에 들어감
	- 8진수: 0 이 앞에 들어감
	- 10진수: x
	- 16진수: 0x, 0X가 들어감
	- * int를 붙이면 출력값은 10진수로 치환되어서 나온다.

* 타입 변수의 허용 범위를 초과한 값을 넣으면 컴파일 오류가 발생한다.
Ex)	byte vat1 = 128; 오류



2-3 Character type

* 작은 따옴표(')로 감싼 것을 문자 리터럴이라고 한다.
* 유니코드는 전세계 문자들을 숫자로 정의한 국제 표준 규약이다.
Ex)	char C = 65; (65는 대문자 A)
	char C = 0X0041; (위와 같은 표현)
* char 변수에 아무것도 넣지 않으면 컴파일 오류가 뜬다.
* 여러개의 문자가들어가면 컴파일 오류 


2-4 Float type

float	4byte	32bit	소수점 7자리
double	8byte	64bit	소수점 15자리
* 보통 double 이 float보다 큰 실수를 저장할 수 있고 정밀도 또한 높아서 자주 사용한다.
* 보통 컴파일러도 double로 인식하기 때문에 float을 사용해주고 싶으면 실수뒤에 f나 F를 붙여 사용한다.
Ex)	double x = 5e2; // 5.0 x 10^2 = 500.0
	double y = 0.12E-2; // 0.12 x 10^-2 = 0.0012
	* e나 E는 10의 거듭제곱으로 표현된다.



2-5 Boolean type

True;
False;
* ==, !=, >, >=, ||, && 등등 ch03에서 자세히 다룰 예정

2-6 String type

* character type에서는 작은따옴표를 사용하며 유니코드로 변환이 가능했지만, String type(문자열)타입은 
  큰따옴표를 사용하며 유니코드로 변경이 불가능 하다.
* escape 문자
	\"	"문자표현
	\'	'문자표현
	\\	\문자표현
	\u16진수	16진수 유니코드에 해당하는 문자 포함
	\t	탭만큼 띄움
	\n	줄바꿈
	\r	출력시 캐리지 리턴(?) 이게뭐여 알빠노

2-7 자동 타입변환

*작은 범위 타입에서 큰 범위 타입으로 가는것
Ex)	byte < short, char < int < long < float < double
	byte 에서 chat, int 등으로 가는 것이 자동 타입 변환

	byte value = 10;
	int value2 = value;	*의문점: value2의 값은 int 범위로 확장되었지만 ,value 값은 범위 그대로인가? 
				- 그대로이다.
				*분명 long은 float보다 범위가 큰데 왜 정수에서 실수로 가는것이 더 범위가 넓어 자동변환
				이 된다고 말 할 수 있는걸까? 단순히 바이트로 따지면 long이 더크지만, 표현할 수 있는 값의
				범위는 실수형이 더 크기때문에 자동 형변환이다.
				
	* 같은 2byte인 short와 char끼리는 자동 형변환 불가 > 서로 범위가 다르기 때문에 자동형변환 불가능
	* 뭔가 자동형변환은 컴퓨터가 값손실이 안나면 자동으로 해주는 느낌

2-8 강제형변환

* 큰 범위 타입에서 작은 범위 타입으로 가는것
* 큰 범위타입을 작은 범위타입에 쪼개어서 저장하는 것을 캐스팅이라고 함.
* 실수에서 정수형으로 강제형변환하면 정수부분만 남고, 숫자에서 char로 형변환하면 65535까지의 수만 정상적으로 작동한다.



2-9 연산식 자동형변환

* 예제 풀어보기
* +연산자 는 피연산자가 숫자이면 덧셈, 문자열일경우 그이후의 모든 수를 문자열로 치환하여 출력함.
* int 보다 작은 연산자들은 계산이될때 자동으로 int 로 치환되어 계산이된다.
* int 보다 큰 연산자들은 연산자에따라서 long, float, double등으로 치환되어 계산된다.
Ex)	int x = 1;
	int y = 2;
	double z = x / y;
	z = 0.0 이 나온다. ( x/y 는 int끼리의 계산이므로 값이 0.5 가아닌 0으로 나오며 그걸 double z 에 저장하므로 0.0
	이걸 맞게 바꿔주려면 x 나 y 둘중하나나 둘다 앞에 (double)을 넣어줘야 한다.
* 문자열과 숫자가 더해지면 문자열 효과가 나온다.
* 사칙연산 순서대로 숫자끼리 더해지면 숫자 그중간에 문자열이 나오면 그 중간부터 문자열로 계산된다.

2-10 문자열을 기본형으로

* 바꾸고싶은타입 value = 바꾸고싶은타입.parse바꾸고싶은타입(string);
Ex)	String str = "200";
	int value = Integer.parseInt(str);

* 반대로 기본타입을 문자열로 바꾸려면 
	String str = String.valueOf(기본타입값);
Ex)	String str1 = String.valueOf(10);

2-11 변수 사용 범위
* main() 메소드 블록에는 다른 중괄호 {} 블록들이 작성될 수 있다. 
* 긴 문장이나 여러 프로세스를 잘 묶어서 사용하면 된다.

2-12 콘솔 출력값
1. System.out.println(); - 출력하고 행바꾸기
2. System.out.print(); - 출력하고 행바꾸지말기
3. System.out.printf("형식 문자열", 값1, 값2...); - 형식 문자열에 맞추어 뒤의 값 출력 (c에서 쓰던 형식 기억하면 쉬움)
Ex)	System.out.printf("졸리다아아 %d", 0412);
	*형식 문자열에 포함될 값이 두개 이상이면 순번도 포함시켜야된다. (%1$s, %2$d ...) //뭐야 이거 순번 안적고 걍 해봤는데	
									    그냥 되는데,,,?? 뭐지..
	System.out.printf("아아 %1$s, %2$d", "하암", 0412);

문자열 표현방식
1. 정수	%d	정수			ex)123
	%6d	6자리 정수 왼쪽 공백		ex)___123
	%-6d	6자리 정수 오른쪽 공백	ex)123___
	%06d	6자리 정수 왼쪽 빈자리 0채우기 ex)000123

2. 실수	%10.2f	총 10자리 중에서 7자리 정수 + 1자리 소숫점 + 2자기 소수점/ 왼쪽공백	ex)____123.45
	%-10.2f						      / 오른쪽공백 ex)123.45____
	%010.2f						      / 빈자리0	ex)0000123.45

3. 문자열	%s	문자열
	%6s	6자리 문자열 왼쪽 공백
	%-6s	6자리 문자열 오른쪽 공백

4. 특수문자 \t = 탭
	  \n = 줄바꿈
	  %% = %



2-13 키보드 입력데이터 변수에 저장

먼저 import java.util.Scanner; 해준다

Scanner scanner = new Scanner(System.in);
String inputData = scanner.nextline(); 
	*nextline() 은 엔터키가 입력되기 전까지 대기항태가되며 입력한 형태를 inputData에 저장해준다